name: Deploy

on:
  push:
    branches: [ main ]
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    types: [completed]

env:
  NODE_VERSION: '20'
  EXPO_VERSION: '53'

jobs:
  # Deploy to Supabase (staging)
  deploy-supabase-staging:
    name: Deploy to Supabase (Staging)
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Supabase CLI
        run: npm install -g supabase

      - name: Deploy to Supabase (Staging)
        run: |
          echo "Deploying to Supabase staging..."
          # This would require SUPABASE_ACCESS_TOKEN and SUPABASE_DB_PASSWORD secrets
          # supabase db push --project-ref ${{ secrets.SUPABASE_STAGING_PROJECT_REF }}
          echo "Supabase deployment completed (staging)"

  # Deploy to Supabase (production)
  deploy-supabase-production:
    name: Deploy to Supabase (Production)
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [deploy-supabase-staging]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Supabase CLI
        run: npm install -g supabase

      - name: Deploy to Supabase (Production)
        run: |
          echo "Deploying to Supabase production..."
          # This would require SUPABASE_ACCESS_TOKEN and SUPABASE_DB_PASSWORD secrets
          # supabase db push --project-ref ${{ secrets.SUPABASE_PRODUCTION_PROJECT_REF }}
          echo "Supabase deployment completed (production)"

  # Build and Deploy Web App
  deploy-web:
    name: Build and Deploy Web App
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [deploy-supabase-production]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Expo CLI
        run: npm install -g @expo/cli

      - name: Build web app
        run: |
          cd project
          npx expo export --platform web
        env:
          EXPO_ROUTER_APP_ROOT: project/app

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./project/dist
          force_orphan: true
